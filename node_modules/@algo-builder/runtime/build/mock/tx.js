"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mockSuggestedParams = void 0;
const constants_1 = require("../lib/constants");
const GENESIS_ID = 'testnet-v1.0';
// testnet-v1.0 hash
const GENESIS_HASH = 'SGO1GKSzyE7IEPItTxCByw9x8FmnrCDexi9/cOUJOiI=';
function mockSuggestedParams(payFlags, round) {
    const s = {};
    if (payFlags.flatFee === undefined) {
        if (payFlags.totalFee !== undefined)
            s.flatFee = true;
        else
            s.flatFee = false;
    }
    s.fee = payFlags.totalFee ?? payFlags.feePerByte ?? constants_1.ALGORAND_MIN_TX_FEE;
    // https://developer.algorand.org/docs/features/transactions/#setting-first-and-last-valid
    s.firstRound = payFlags.firstValid ?? (round - 1);
    s.lastRound = payFlags.firstValid === undefined || payFlags.validRounds === undefined
        ? s.firstRound + 1000
        : Number(payFlags.firstValid) + Number(payFlags.validRounds);
    s.genesisID = GENESIS_ID;
    s.genesisHash = GENESIS_HASH;
    return s;
}
exports.mockSuggestedParams = mockSuggestedParams;
//# sourceMappingURL=tx.js.map