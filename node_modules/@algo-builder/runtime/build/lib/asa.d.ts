import { types } from "@algo-builder/web";
import { modelsv2 } from "algosdk";
import { AccountMap, RuntimeAccountMap } from "../types";
export declare const ASSETS_DIR = "assets";
/**
 * Validates asset definitions and checks if opt-in acc names are present in network
 * @param accounts AccountMap is the SDK account type, used in builder. RuntimeAccountMap is
 * for AccountStore used in runtime (where we use maps instead of arrays in sdk structures).
 * @param filename asa filename
 * @param asaDef asset definition
 */
export declare function validateOptInAccNames(accounts: AccountMap | RuntimeAccountMap, asaDef: types.ASADef, source?: string): void;
/**
 * Validate and parse each field of asset definition. `metadataHash`, if provided as a Buffer
 * will be transformed into Uint8Array.
 * @param asaDef asset definition
 * @param source source of assetDef: asa.yaml file OR function deployASA
 * @returns parsed asa definition
 */
export declare function parseASADef(asaDef: types.ASADef, source?: string): types.ASADef;
/**
 * Override & validate ASA definition in asa.yaml using custom params passed via deployASA
 * @param accounts accounts by name
 * @param origDef source asset definition (in asa.yaml)
 * @param newDef custom asset def params (passed during ASA deployment)
 * @returns overriden asset definition. If custom params are empty, return source asa def
 */
export declare function overrideASADef(accounts: AccountMap, origDef: types.ASADef, newDef?: Partial<types.ASADef>): types.ASADef;
/**
 * Parses, overrides and validates asset defs map. Filaname parameter is used to
   indicate an ASA definition source when reporting errors.
 * @param asaDefs asset definitions to validate
 * @param accounts map of string => account. AccountMap is the SDK account type,
 * used in builder. RuntimeAccountMap is for AccountStore used in runtime
 * (where we use maps instead of arrays in sdk structures).
 * @param filename asa filename
 */
export declare function validateASADefs(asaDefs: types.ASADefs, accounts: AccountMap | RuntimeAccountMap, filename: string): types.ASADefs;
/**
 * Loads, validates and returns asset definitions from the assets/asa.yaml file
 * @param accounts map of string => account. AccountMap is the SDK account type,
 * used in builder. RuntimeAccountMap is for AccountStore used in runtime
 * (where we use maps instead of arrays in sdk structures).
 */
export declare function loadASAFile(accounts: AccountMap | RuntimeAccountMap): types.ASADefs;
/**
 * Check and Change ASA fields
 * @param fields Custom ASA fields
 * @param asset Defined ASA fields
 */
export declare function checkAndSetASAFields(fields: types.AssetModFields, asset: modelsv2.AssetParams): void;
