"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.loadFilenames = void 0;
const web_1 = require("@algo-builder/web");
const fs_1 = __importDefault(require("fs"));
const glob_1 = __importDefault(require("glob"));
const path_1 = __importDefault(require("path"));
const comparators_1 = require("../../lib/comparators");
/**
 * Load .js, .ts files from /scripts (default) directory
 * @param directory directory to load files from
 * @param taskType task type (eg. test)
 * @returns array of paths as string eg. ['scripts/file1.js', 'scripts/file2.js', ..]
 */
function loadFilenames(directory, taskType) {
    if (!fs_1.default.existsSync(directory)) {
        if (taskType === "test") {
            throw new web_1.BuilderError(web_1.ERRORS.BUILTIN_TASKS.TESTS_DIRECTORY_NOT_FOUND, {
                directory
            });
        }
        else {
            throw new web_1.BuilderError(web_1.ERRORS.BUILTIN_TASKS.SCRIPTS_DIRECTORY_NOT_FOUND, {
                directory
            });
        }
    }
    return glob_1.default.sync(path_1.default.join(directory, "*.js"))
        .concat(glob_1.default.sync(path_1.default.join(directory, "*.ts")))
        .sort(comparators_1.cmpStr);
}
exports.loadFilenames = loadFilenames;
//# sourceMappingURL=files.js.map