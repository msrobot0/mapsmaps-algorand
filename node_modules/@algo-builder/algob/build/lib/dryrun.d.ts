import { types as wtypes } from "@algo-builder/web";
import type { DebuggerContext, Deployer } from "../types";
export declare const tealExt = ".teal";
export declare const pyExt = ".py";
export declare const lsigExt = ".lsig";
export declare class Tealdbg {
    deployer: Deployer;
    execParams: wtypes.ExecParams | wtypes.ExecParams[];
    constructor(deployer: Deployer, execParams: wtypes.ExecParams | wtypes.ExecParams[]);
    /**
     * Get account state(s) (fetched using account address) for dry run.
     * For eg. app_local_get, app_local_put requires an accounts ledger state to be uploaded.
     * @param txn transaction parameters
     */
    private getAccountsForDryRun;
    /**
     * Get application state(s) (fetched by appID) for dry run.
     * For eg. app_global_get, app_global_put requires app state.
     * @param txn transaction parameters
     */
    private getAppsForDryRun;
    /**
     * Create dry run request object using SDK transaction(s) from wtypes.ExecParams
     * User can dump the response (using this.dryRunResponse) or start debugger session
     * @returns SDK dryrun request object
     */
    private createDryRunReq;
    /**
     * Gets dryrun response in json from the request object
     * Returns a response with disassembly, logic-sig-messages with PASS/REJECT and sig-trace
     * @param outFile name of file to dump the response. Dumped in `assets/<file>`
     * @param force if true, overwrites an existing dryrun response dump
     */
    dryRunResponse(outFile?: string, force?: boolean): Promise<Object>;
    /**
     * Start a debugger session using child_process.spawn() using the given args.
     * Kills an existing session first (using killall -9 <process>)
     * @param tealdbgArgs arguments to `tealdbg debug`. Eg. `--mode signature`, `--group-index 0`
     */
    protected runDebugger(tealdbgArgs: string[]): Promise<boolean>;
    /**
     * Sets args to pass to `tealdbg debug` command. Currently supported args are
     * tealFile, mode, groupIndex.
     * @param debugCtxParams args passed by user for debugger session
     * @param pathToCache path to --dryrun-dump (msgpack encoded) present in `/cache/dryrun`
     */
    private getTealDbgParams;
    /**
     * Runs a debugging session:
     *  + Construct dryrun request using wtypes.ExecParams passed by user
     *  + Set arguments for tealdbg debug
     *  + Run debugger session using child_process.spawn()
     * @param debugCtxParams args passed by user for debugger session
     */
    run(debugCtxParams?: DebuggerContext): Promise<void>;
    protected writeFile(filename: string, content: Uint8Array | string): void;
}
