"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageSource = exports.JsonRpcMethod = exports.JSONRPC_VERSION = exports.RequestErrors = void 0;
// https://github.com/PureStake/algosigner/blob/develop/packages/common/src/types.ts
/* eslint-disable no-unused-vars */
var RequestErrors;
(function (RequestErrors) {
    RequestErrors[RequestErrors["None"] = 0] = "None";
    RequestErrors["NotAuthorized"] = "[RequestErrors.NotAuthorized] The extension user does not authorize the request.";
    RequestErrors["InvalidTransactionParams"] = "[RequestErrors.InvalidTransactionParams] Invalid transaction parameters.";
    RequestErrors["UnsupportedAlgod"] = "[RequestErrors.UnsupportedAlgod] The provided method is not supported.";
    RequestErrors["UnsupportedLedger"] = "[RequestErrors.UnsupportedLedger] The provided ledger is not supported.";
    RequestErrors["Undefined"] = "[RequestErrors.Undefined] An undefined error occurred.";
})(RequestErrors = exports.RequestErrors || (exports.RequestErrors = {}));
exports.JSONRPC_VERSION = '2.0';
/* eslint-disable no-unused-vars */
var JsonRpcMethod;
(function (JsonRpcMethod) {
    JsonRpcMethod["Heartbeat"] = "heartbeat";
    JsonRpcMethod["Authorization"] = "authorization";
    JsonRpcMethod["AuthorizationAllow"] = "authorization-allow";
    JsonRpcMethod["AuthorizationDeny"] = "authorization-deny";
    JsonRpcMethod["SignAllow"] = "sign-allow";
    JsonRpcMethod["SignAllowMultisig"] = "sign-allow-multisig";
    JsonRpcMethod["SignAllowWalletTx"] = "sign-allow-wallet-tx";
    JsonRpcMethod["SignDeny"] = "sign-deny";
    JsonRpcMethod["SignTransaction"] = "sign-transaction";
    JsonRpcMethod["SignMultisigTransaction"] = "sign-multisig-transaction";
    JsonRpcMethod["SignWalletTransaction"] = "sign-wallet-transaction";
    JsonRpcMethod["SendTransaction"] = "send-transaction";
    JsonRpcMethod["Algod"] = "algod";
    JsonRpcMethod["Indexer"] = "indexer";
    JsonRpcMethod["Accounts"] = "accounts";
    // UI methods
    JsonRpcMethod["CreateWallet"] = "create-wallet";
    JsonRpcMethod["DeleteWallet"] = "delete-wallet";
    JsonRpcMethod["CreateAccount"] = "create-account";
    JsonRpcMethod["SaveAccount"] = "save-account";
    JsonRpcMethod["ImportAccount"] = "import-account";
    JsonRpcMethod["DeleteAccount"] = "delete-account";
    JsonRpcMethod["GetSession"] = "get-session";
    JsonRpcMethod["Login"] = "login";
    JsonRpcMethod["Logout"] = "logout";
    JsonRpcMethod["AccountDetails"] = "account-details";
    JsonRpcMethod["Transactions"] = "transactions";
    JsonRpcMethod["AssetDetails"] = "asset-details";
    JsonRpcMethod["AssetsAPIList"] = "assets-api-list";
    JsonRpcMethod["AssetsVerifiedList"] = "assets-verified-list";
    JsonRpcMethod["SignSendTransaction"] = "sign-send-transaction";
    JsonRpcMethod["ChangeLedger"] = "change-ledger";
    JsonRpcMethod["SaveNetwork"] = "save-network";
    JsonRpcMethod["DeleteNetwork"] = "delete-network";
    JsonRpcMethod["GetLedgers"] = "get-ledgers";
})(JsonRpcMethod = exports.JsonRpcMethod || (exports.JsonRpcMethod = {}));
var MessageSource;
(function (MessageSource) {
    MessageSource["Extension"] = "extension";
    MessageSource["DApp"] = "dapp";
    MessageSource["Router"] = "router";
    MessageSource["UI"] = "ui";
})(MessageSource = exports.MessageSource || (exports.MessageSource = {}));
//# sourceMappingURL=algo-signer-types.js.map