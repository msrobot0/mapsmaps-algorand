/// <reference types="node" />
import * as z from 'zod';
export declare const AddressSchema: z.ZodString;
export declare const ASADefSchema: z.ZodObject<{
    name: z.ZodOptional<z.ZodString>;
    total: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodBigInt, z.ZodString]>, string | number | bigint, string | number | bigint>;
    decimals: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodBigInt]>, number | bigint, number | bigint>;
    defaultFrozen: z.ZodOptional<z.ZodBoolean>;
    unitName: z.ZodEffects<z.ZodOptional<z.ZodString>, string | undefined, string | undefined>;
    url: z.ZodEffects<z.ZodOptional<z.ZodString>, string | undefined, string | undefined>;
    metadataHash: z.ZodEffects<z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodType<Buffer, z.ZodTypeDef, Buffer>]>, z.ZodType<Uint8Array, z.ZodTypeDef, Uint8Array>]>>, string | Uint8Array | Buffer | undefined, string | Uint8Array | Buffer | undefined>;
    note: z.ZodOptional<z.ZodString>;
    noteb64: z.ZodOptional<z.ZodString>;
    manager: z.ZodOptional<z.ZodString>;
    reserve: z.ZodOptional<z.ZodString>;
    freeze: z.ZodOptional<z.ZodString>;
    clawback: z.ZodOptional<z.ZodString>;
    optInAccNames: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
}, "strip", z.ZodTypeAny, {
    note?: string | undefined;
    clawback?: string | undefined;
    defaultFrozen?: boolean | undefined;
    freeze?: string | undefined;
    manager?: string | undefined;
    metadataHash?: string | Uint8Array | Buffer | undefined;
    name?: string | undefined;
    reserve?: string | undefined;
    unitName?: string | undefined;
    url?: string | undefined;
    noteb64?: string | undefined;
    optInAccNames?: string[] | undefined;
    decimals: number | bigint;
    total: string | number | bigint;
}, {
    note?: string | undefined;
    clawback?: string | undefined;
    defaultFrozen?: boolean | undefined;
    freeze?: string | undefined;
    manager?: string | undefined;
    metadataHash?: string | Uint8Array | Buffer | undefined;
    name?: string | undefined;
    reserve?: string | undefined;
    unitName?: string | undefined;
    url?: string | undefined;
    noteb64?: string | undefined;
    optInAccNames?: string[] | undefined;
    decimals: number | bigint;
    total: string | number | bigint;
}>;
export declare const ASADefsSchema: z.ZodRecord<z.ZodString, z.ZodObject<{
    name: z.ZodOptional<z.ZodString>;
    total: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodBigInt, z.ZodString]>, string | number | bigint, string | number | bigint>;
    decimals: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodBigInt]>, number | bigint, number | bigint>;
    defaultFrozen: z.ZodOptional<z.ZodBoolean>;
    unitName: z.ZodEffects<z.ZodOptional<z.ZodString>, string | undefined, string | undefined>;
    url: z.ZodEffects<z.ZodOptional<z.ZodString>, string | undefined, string | undefined>;
    metadataHash: z.ZodEffects<z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodType<Buffer, z.ZodTypeDef, Buffer>]>, z.ZodType<Uint8Array, z.ZodTypeDef, Uint8Array>]>>, string | Uint8Array | Buffer | undefined, string | Uint8Array | Buffer | undefined>;
    note: z.ZodOptional<z.ZodString>;
    noteb64: z.ZodOptional<z.ZodString>;
    manager: z.ZodOptional<z.ZodString>;
    reserve: z.ZodOptional<z.ZodString>;
    freeze: z.ZodOptional<z.ZodString>;
    clawback: z.ZodOptional<z.ZodString>;
    optInAccNames: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
}, "strip", z.ZodTypeAny, {
    note?: string | undefined;
    clawback?: string | undefined;
    defaultFrozen?: boolean | undefined;
    freeze?: string | undefined;
    manager?: string | undefined;
    metadataHash?: string | Uint8Array | Buffer | undefined;
    name?: string | undefined;
    reserve?: string | undefined;
    unitName?: string | undefined;
    url?: string | undefined;
    noteb64?: string | undefined;
    optInAccNames?: string[] | undefined;
    decimals: number | bigint;
    total: string | number | bigint;
}, {
    note?: string | undefined;
    clawback?: string | undefined;
    defaultFrozen?: boolean | undefined;
    freeze?: string | undefined;
    manager?: string | undefined;
    metadataHash?: string | Uint8Array | Buffer | undefined;
    name?: string | undefined;
    reserve?: string | undefined;
    unitName?: string | undefined;
    url?: string | undefined;
    noteb64?: string | undefined;
    optInAccNames?: string[] | undefined;
    decimals: number | bigint;
    total: string | number | bigint;
}>>;
